#!/bin/bash

# Check if input file is provided
if [ $# -ne 1 ]; then
	    echo "Usage: $0 testng-results.xml"
	        exit 1
fi

XML_FILE="$1"

# Check if file exists
if [ ! -f "$XML_FILE" ]; then
	    echo "Error: File $XML_FILE not found!"
	        exit 1
fi

# Extract test counts and duration
TOTAL_TESTS=$(grep -oP 'total="\K[^"]+' "$XML_FILE")
PASSED_TESTS=$(grep -oP 'passed="\K[^"]+' "$XML_FILE")
FAILED_TESTS=$(grep -oP 'failed="\K[^"]+' "$XML_FILE")
SKIPPED_TESTS=$(grep -oP 'skipped="\K[^"]+' "$XML_FILE")
DURATION=$(grep -oP 'duration-ms="\K[^"]+' "$XML_FILE" | head -1)

# Calculate duration in seconds without bc
DURATION_SEC=$(awk "BEGIN {printf \"%.2f\", $DURATION/1000}")

SUITE_NAME=$(grep -oP 'name="\K[^"]+' "$XML_FILE" | head -1)
START_TIME=$(grep -oP 'started-at="\K[^"]+' "$XML_FILE" | head -1)
END_TIME=$(grep -oP 'finished-at="\K[^"]+' "$XML_FILE" | head -1)

# Extract failed tests and reasons
extract_failed_tests() {
	    awk '
	        BEGIN { RS="</test-method>"; FS="\n" }
		    /status="FAIL"/ {
		            method_name=""
			            reason=""
				            in_message=0
					            for (i=1; i<=NF; i++) {
							                # Extract method name
									            if ($i ~ /name="[^"]+"/) {
											                    method_name = gensub(/.*name="([^"]+)".*/, "\\1", "g", $i)
													                }
															            # Check if we are inside the <message> tag
																                if ($i ~ /<message>/) {
																			                in_message=1
																					            }
																						                # Extract the reason from <![CDATA[...]]>
																								            if (in_message && $i ~ /<!\[CDATA\[/) {
																										                    reason = gensub(/.*<!\[CDATA\[(.*)\]\]>.*/, "\\1", "g", $i)
																												                    # Clean up whitespace
																														                    reason = gensub(/^[ \t]+|[ \t]+$/, "", "g", reason)
																																                    in_message=0
																																		                }
																																				        }
																																					        if (method_name != "" && reason != "") {
																																							            print method_name "|" reason
																																								            }
																																									        }
																																										    ' "$XML_FILE"
																																									    }

																																									    # Extract skipped tests and reasons
																																									    extract_skipped_tests() {
																																										        awk '
																																											    BEGIN { RS="</test-method>"; FS="\n" }
																																											        /status="SKIP"/ {
																																												        method_name=""
																																													        reason=""
																																														        in_message=0
																																															        for (i=1; i<=NF; i++) {
																																																	            # Extract method name
																																																		                if ($i ~ /name="[^"]+"/) {
																																																					                method_name = gensub(/.*name="([^"]+)".*/, "\\1", "g", $i)
																																																							            }
																																																								                # Check if we are inside the <message> tag
																																																										            if ($i ~ /<message>/) {
																																																												                    in_message=1
																																																														                }
																																																																            # Extract the reason from <![CDATA[...]]>
																																																																	                if (in_message && $i ~ /<!\[CDATA\[/) {
																																																																				                reason = gensub(/.*<!\[CDATA\[(.*)\]\]>.*/, "\\1", "g", $i)
																																																																						                # Clean up whitespace
																																																																								                reason = gensub(/^[ \t]+|[ \t]+$/, "", "g", reason)
																																																																										                in_message=0
																																																																												            }
																																																																													            }
																																																																														            if (method_name != "" && reason != "") {
																																																																																                print method_name "|" reason
																																																																																		        }
																																																																																			    }
																																																																																			        ' "$XML_FILE"
																																																																																			}

																																																																																			FAILED_LIST=$(extract_failed_tests)
																																																																																			SKIPPED_LIST=$(extract_skipped_tests)

																																																																																			# Current date and time
																																																																																			CURRENT_DATE=$(date "+%Y-%m-%d %H:%M:%S")

																																																																																			# Generate HTML report
																																																																																			cat > testng-report.html << EOF
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TestNG Test Results</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
            color: #333;
        }
        h1, h2 {
            color: #2c3e50;
        }
        .summary {
            margin-bottom: 20px;
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin-bottom: 20px;
            box-shadow: 0 2px 3px rgba(0,0,0,0.1);
        }
        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f8f9fa;
            font-weight: bold;
        }
        tr:hover {
            background-color: #f5f5f5;
        }
        .passed {
            color: green;
        }
        .failed {
            color: red;
        }
        .skipped {
            color: orange;
        }
        .footer {
            margin-top: 30px;
            font-size: 0.8em;
            color: #777;
            text-align: center;
        }
        .stat-table th {
            background-color: #e9ecef;
        }
        .fail-table th {
            background-color: #f8d7da;
        }
        .skip-table th {
            background-color: #fff3cd;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>TestNG Test Results Summary</h1>
        <div class="summary">
            <p><strong>Suite:</strong> $SUITE_NAME</p>
            <p><strong>Start Time:</strong> $START_TIME</p>
            <p><strong>End Time:</strong> $END_TIME</p>
        </div>
        
        <h2>Test Statistics</h2>
        <table class="stat-table">
            <tr>
                <th>Total Tests</th>
                <th>Passed</th>
                <th>Failed</th>
                <th>Skipped</th>
                <th>Duration</th>
            </tr>
            <tr>
                <td>$TOTAL_TESTS</td>
                <td class="passed">$PASSED_TESTS</td>
                <td class="failed">$FAILED_TESTS</td>
                <td class="skipped">$SKIPPED_TESTS</td>
                <td>${DURATION_SEC}s</td>
            </tr>
        </table>
EOF

# Add failed tests table if any
if [ "$FAILED_TESTS" -gt 0 ]; then
	    cat >> testng-report.html << EOF
        <h2>Failed Tests</h2>
        <table class="fail-table">
            <tr>
                <th>Test Method</th>
                <th>Failure Reason</th>
            </tr>
EOF
    
    echo "$FAILED_LIST" | while IFS='|' read -r METHOD REASON; do
            cat >> testng-report.html << EOF
            <tr>
                <td>$METHOD</td>
                <td>$REASON</td>
            </tr>
EOF
    done
        
        cat >> testng-report.html << EOF
        </table>
EOF
fi

# Add skipped tests table if any
if [ "$SKIPPED_TESTS" -gt 0 ]; then
	    cat >> testng-report.html << EOF
        <h2>Skipped Tests</h2>
        <table class="skip-table">
            <tr>
                <th>Test Method</th>
                <th>Skip Reason</th>
            </tr>
EOF
    
    echo "$SKIPPED_LIST" | while IFS='|' read -r METHOD REASON; do
            cat >> testng-report.html << EOF
            <tr>
                <td>$METHOD</td>
                <td>$REASON</td>
            </tr>
EOF
    done
        
        cat >> testng-report.html << EOF
        </table>
EOF
fi

# Close HTML
cat >> testng-report.html << EOF
        <div class="footer">
            <p>Report generated on $CURRENT_DATE</p>
        </div>
    </div>
</body>
</html>
EOF

echo "Report generated: testng-report.html"
